name: Deployment

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deployment:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
      
      - name: Create BE_Authentication_Service Env file
        working-directory: ./BE_Authentication_Service
        run: |
          touch .env
          echo PORT=7000 >> .env
          echo TYPE=${{ secrets.TYPE }} >> .env
          echo PROJECT_ID=${{ secrets.PROJECT_ID }} >> .env
          echo PRIVATE_KEY_ID=${{ secrets.PRIVATE_KEY_ID }} >> .env
          echo PRIVATE_KEY=${{ secrets.PRIVATE_KEY }} >> .env
          echo CLIENT_EMAIL=${{ secrets.CLIENT_EMAIL }} >> .env
          echo CLIENT_ID=${{ secrets.CLIENT_ID }} >> .env
          echo AUTH_URI=${{ secrets.AUTH_URI }} >> .env
          echo TOKEN_URI=${{ secrets.TOKEN_URI }} >> .env
          echo AUTH_PROVIDER_x509_CERT_URL=${{ secrets.AUTH_PROVIDER_x509_CERT_URL }} >> .env
          echo CLIENT_X509_CERT_URL=${{ secrets.CLIENT_X509_CERT_URL }} >> .env
          echo STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET }} >> .env
          cat .env
          
      - name: Create BE_Document_Service Env file
        working-directory: ./BE_Document_Service
        run: |
          touch .env
          echo PORT=5050 >> .env
          echo TYPE=${{ secrets.TYPE }} >> .env
          echo PROJECT_ID=${{ secrets.PROJECT_ID }} >> .env
          echo PRIVATE_KEY_ID=${{ secrets.PRIVATE_KEY_ID }} >> .env
          echo PRIVATE_KEY=${{ secrets.PRIVATE_KEY }} >> .env
          echo CLIENT_EMAIL=${{ secrets.CLIENT_EMAIL }} >> .env
          echo CLIENT_ID=${{ secrets.CLIENT_ID }} >> .env
          echo AUTH_URI=${{ secrets.AUTH_URI }} >> .env
          echo TOKEN_URI=${{ secrets.TOKEN_URI }} >> .env
          echo AUTH_PROVIDER_x509_CERT_URL=${{ secrets.AUTH_PROVIDER_x509_CERT_URL }} >> .env
          echo CLIENT_X509_CERT_URL=${{ secrets.CLIENT_X509_CERT_URL }} >> .env
          echo STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET }} >> .env
          cat .env
          
      - name: Create BE_Notification_Service Env file
        working-directory: ./BE_Notification_Service
        run: |
          touch .env
          echo PORT=5000 >> .env
          echo TYPE=${{ secrets.TYPE }} >> .env
          echo PROJECT_ID=${{ secrets.PROJECT_ID }} >> .env
          echo PRIVATE_KEY_ID=${{ secrets.PRIVATE_KEY_ID }} >> .env
          echo PRIVATE_KEY=${{ secrets.PRIVATE_KEY }} >> .env
          echo CLIENT_EMAIL=${{ secrets.CLIENT_EMAIL }} >> .env
          echo CLIENT_ID=${{ secrets.CLIENT_ID }} >> .env
          echo AUTH_URI=${{ secrets.AUTH_URI }} >> .env
          echo TOKEN_URI=${{ secrets.TOKEN_URI }} >> .env
          echo AUTH_PROVIDER_x509_CERT_URL=${{ secrets.AUTH_PROVIDER_x509_CERT_URL }} >> .env
          echo CLIENT_X509_CERT_URL=${{ secrets.CLIENT_X509_CERT_URL }} >> .env
          echo STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET }} >> .env
          cat .env
          
      - name: Create BE_Signature_Service Env file
        working-directory: ./BE_Signature_Service
        run: |
          touch .env
          echo PORT=3000 >> .env
          echo TYPE=${{ secrets.TYPE }} >> .env
          echo PROJECT_ID=${{ secrets.PROJECT_ID }} >> .env
          echo PRIVATE_KEY_ID=${{ secrets.PRIVATE_KEY_ID }} >> .env
          echo PRIVATE_KEY=${{ secrets.PRIVATE_KEY }} >> .env
          echo CLIENT_EMAIL=${{ secrets.CLIENT_EMAIL }} >> .env
          echo CLIENT_ID=${{ secrets.CLIENT_ID }} >> .env
          echo AUTH_URI=${{ secrets.AUTH_URI }} >> .env
          echo TOKEN_URI=${{ secrets.TOKEN_URI }} >> .env
          echo AUTH_PROVIDER_x509_CERT_URL=${{ secrets.AUTH_PROVIDER_x509_CERT_URL }} >> .env
          echo CLIENT_X509_CERT_URL=${{ secrets.CLIENT_X509_CERT_URL }} >> .env
          echo STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET }} >> .env
          cat .env
          
      - name: Generate deployment package
        run: |
          zip -r deploy.zip . -x '*.git'
      
      - name: Deploy on Elastic beanstalk Prod Env
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: mssignatext
          environment_name: Mssignatext-env
          version_label: "ver-${{ github.sha }}"
          region: eu-west-1
          deployment_package: deploy.zip
